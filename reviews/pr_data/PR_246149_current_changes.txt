PR SUMMARY:
File: src/vs/workbench/contrib/chat/browser/actions/reusablePromptActions/chatAttachPromptAction.ts
Before:
import { attachPrompts, IAttachPromptOptions } from './dialogs/askToSelectPrompt/utils/attachPrompts.js';
			const widget = await attachPrompts(
				[{ value: resource }],
After:
import { attachPrompt, IAttachPromptOptions } from './dialogs/askToSelectPrompt/utils/attachPrompt.js';
			const { widget } = await attachPrompt(
				resource,

File: src/vs/workbench/contrib/chat/browser/actions/reusablePromptActions/chatRunPromptAction.ts
Before:
import { runAttachPromptAction } from './chatAttachPromptAction.js';
	): Promise<void> {
		return await runAttachPromptAction({
			inNewChat,
			skipSelectionDialog: true,
		}, commandService);
	): Promise<void> {
	): Promise<void> {

IMPORTANT FILES:
src/vs/workbench/contrib/chat/browser/actions/reusablePromptActions/dialogs/askToSelectPrompt/askToSelectPrompt.ts
src/vs/workbench/contrib/chat/browser/chatAttachmentModel/chatPromptAttachmentsCollection.ts
src/vs/workbench/contrib/chat/browser/actions/reusablePromptActions/chatRunPromptAction.ts
src/vs/workbench/contrib/chat/browser/actions/reusablePromptActions/chatAttachPromptAction.ts
src/vs/workbench/contrib/chat/browser/actions/reusablePromptActions/dialogs/askToSelectPrompt/utils/attachPrompt.ts
src/vs/workbench/contrib/chat/browser/actions/reusablePromptActions/dialogs/askToSelectPrompt/utils/detachPrompt.ts

KEY FUNCTIONS/CLASSES:


CODE BLOCKS:


