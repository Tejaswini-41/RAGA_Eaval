
--- Similar PR #248579 ---
File: src/vs/workbench/contrib/chat/browser/chatWidget.ts
Before:
import { IChatFollowup, IChatLocationData, IChatSendRequestOptions, IChatService } from '../common/chatService.js';
			if (this.lastItem && isResponseVM(this.lastItem) && this.lastItem.isComplete) {
				this.renderFollowups(this.lastItem.replyFollowups, this.lastItem);
			} else {
				this.renderFollowups(undefined);
			}
	private async renderFollowups(items: IChatFollowup[] | undefined, response?: IChatResponseViewModel): Promise<void> {
		this.inputPart.renderFollowups(items, response);
After:
import { IChatLocationData, IChatSendRequestOptions, IChatService } from '../common/chatService.js';
			this.renderFollowups();
	private async renderFollowups(): Promise<void> {
		if (this.lastItem && isResponseVM(this.lastItem) && this.lastItem.isComplete && this.inputPart.currentMode === ChatMode.Ask) {
			this.inputPart.renderFollowups(this.lastItem.replyFollowups, this.lastItem);
		} else {
			this.inputPart.renderFollowups(undefined, undefined);
		}
			this.renderFollowups();


--- Similar PR #248568 ---
File: src/vs/workbench/contrib/chat/browser/chatWidget.ts
Before:
import { ICommandService } from '../../../../platform/commands/common/commands.js';
import { IToggleChatModeArgs, ToggleAgentModeActionId } from './actions/chatExecuteActions.js';
		@ICommandService private readonly commandService: ICommandService,
				input = await this.setupChatModeAndTools(input, attachedContext);
	): Promise<string> {
			await this.commandService.executeCommand(
				ToggleAgentModeActionId,
				{ mode } satisfies IToggleChatModeArgs,
			);
After:
import { handleModeSwitch } from './actions/chatActions.js';
				const newInput = await this.setupChatModeAndTools(input, attachedContext);
				if (newInput === undefined) {
					return;
				}
				input = newInput;
	): Promise<string | undefined> {
			const chatModeCheck = await this.instantiationService.invokeFunction(handleModeSwitch, this.inputPart.currentMode, mode, this.viewModel?.model.getRequests().length ?? 0, this.viewModel?.model.editingSession);
			if (!chatModeCheck) {
				return undefined;
			} else if (chatModeCheck.needToClearSession) {
				this.clear();
				await this.waitForReady();
			}
			this.inputPart.setChatMode(mode);


--- Similar PR #248580 ---
File: src/vs/workbench/contrib/chat/browser/chat.contribution.ts
After:
			tags: ['preview'],

